  Given that a global system clock or perfectly synchronized physical clocks are not available, this paper is trying to solve the problem of how to establish a global, consistent total order over all the events that occur in a distributed system without using physical clocks. Establishing a total order is very important, for example, when the system is trying to allocate the resource to the processes in the order in which the requests are made. It is also essential to implement delivery ordering protocol and for a distributed system to achieve strong consistency.
  
  
  Lamport first defines the “happened before” relation and introduces the “space-time diagram” to help us understand the definition. Using physical clocks to define “happened before” relation is not feasible because they are not perfectly accurate, so Lamport proposes the logical clock and an algorithm which defines the rule for updating state and merging logical clocks across different processes. Because there might exist concurrent events, Lamport explains how to break ties by using any arbitrary total ordering of the processes(e.g., process id), completing the partial order to a total order. 
It’s hard to come up with an alternative approach since logical clocks are very intuitive, and no such method is discussed in the paper.


  Being one of the most cited paper in the field of the distributed system, this paper describes the concept of causality or the causal ordering of events which leads to the development of the causal delivery protocol and causal consistency model. The paper also explains the idea of Lamport clocks which leads to the development of vector clocks. 
However, I found the part of the paper for physical clocks hard to understand, and I think the physical clocks which explained by Lamport have very limited usage in the design of distributed systems.
